{
  "prompts": [
    {
      "id": "helper_initial_prompt",
      "name": "Helper Initial Analysis",
      "description": "Initial analysis of user's problematic code to identify errors and guide discovery",
      "category": "helper",
      "prompt": "You are a debugging expert analyzing student code for errors while maintaining educational value.\n\nEDUCATIONAL DEBUGGING APPROACH:\n1. FIRST: Identify actual bugs, errors, mistakes in the code\n2. Explain WHAT is wrong and WHY it's problematic\n3. Guide their thinking toward the solution WITHOUT giving the fix\n4. Use guiding questions like 'Consider what happens when...' or 'Think about bounds...'\n5. Let them discover the fix - only 'solution' field contains actual correct code\n\nSTRICT REQUIREMENTS:\n- text_hint: MAX 400 characters - Point out error and guide thinking (NO direct solution)\n- code_hint: MAX 800 characters - Show approach/structure but not exact fix\n- solution: Complete correct code (ONLY this field gives the actual answer)\n- problem_description: MAX 200 characters - what the code does\n- Maintain learning value - guide discovery, don't leak solutions\n\nTasks:\n1. Analyze code for bugs and errors\n2. If purpose unclear: set needs_clarification=true\n3. If clear: provide educational error-focused hints that guide discovery\n\nBalance error detection with educational guidance.",
      "tags": ["helper", "initial-analysis", "code-review", "problem-solving"],
      "responseSchema": {
        "type": "Type.OBJECT",
        "properties": {
          "needs_clarification": {
            "type": "Type.BOOLEAN"
          },
          "clarification_request": {
            "type": "Type.STRING"
          },
          "text_hint": {
            "type": "Type.STRING"
          },
          "code_hint": {
            "type": "Type.STRING"
          },
          "solution": {
            "type": "Type.STRING"
          },
          "problem_description": {
            "type": "Type.STRING"
          },
          "key_concepts": {
            "type": "Type.ARRAY",
            "items": {
              "type": "Type.STRING"
            }
          }
        }
      }
    },
    {
      "id": "helper_analyse_prompt",
      "name": "Helper Re-Analysis",
      "description": "Re-analyze updated user code to identify remaining errors while guiding discovery",
      "category": "helper",
      "prompt": "Compare student's current code to the target solution, focusing on remaining errors while maintaining educational value.\n\nEDUCATIONAL RE-ANALYSIS:\n1. Identify remaining bugs, errors, mistakes in their current attempt\n2. Compare to correct solution - what's still wrong?\n3. Guide their thinking about remaining issues WITHOUT giving direct fixes\n4. Acknowledge progress made in fixing previous errors\n5. Use educational prompts to guide discovery of remaining issues\n\nSTRICT REQUIREMENTS:\n- feedback_message: MAX 400 characters - Acknowledge progress and guide next steps\n- text_hint: MAX 400 characters - Point out remaining errors and guide thinking (NO direct solutions)\n- code_hint: MAX 800 characters - Show approach for remaining issues but not exact fixes\n- Maintain educational value - help them discover fixes themselves\n\nProvide: educational error-focused hints, encouraging progress feedback, specific remaining issues to think about, recognition of improvements made.",
      "tags": ["helper", "re-analysis", "progress-tracking", "adaptive-hints"],
      "responseSchema": {
        "type": "Type.OBJECT",
        "properties": {
          "text_hint": {
            "type": "Type.STRING"
          },
          "code_hint": {
            "type": "Type.STRING"
          },
          "feedback_message": {
            "type": "Type.STRING"
          },
          "progress_assessment": {
            "type": "Type.STRING",
            "enum": ["getting_closer", "on_track", "needs_redirection", "almost_there"]
          },
          "issues_found": {
            "type": "Type.ARRAY",
            "items": {
              "type": "Type.STRING"
            }
          },
          "improvements_made": {
            "type": "Type.ARRAY",
            "items": {
              "type": "Type.STRING"
            }
          }
        }
      }
    },
    {
      "id": "helper_generate_flashcard_prompt",
      "name": "Helper Generate Flashcard",
      "description": "Generate flashcard content from the helper session",
      "category": "helper",
      "prompt": "Create a concise flashcard from the programming problem session.\n\nREQUIREMENTS:\n- task_description: MAX 300 characters\n- text_hint: MAX 400 characters\n- code_hint: MAX 800 characters\n- Focus on core learning objectives\n- Make it self-contained for future practice\n\nCreate educational flashcard content for spaced repetition learning.",
      "tags": ["helper", "flashcard-generation", "spaced-repetition", "concept-reinforcement"],
      "responseSchema": {
        "type": "Type.OBJECT",
        "properties": {
          "task_description": {
            "type": "Type.STRING"
          },
          "text_hint": {
            "type": "Type.STRING"
          },
          "code_hint": {
            "type": "Type.STRING"
          },
          "solution": {
            "type": "Type.STRING"
          },
          "difficulty_level": {
            "type": "Type.STRING",
            "enum": ["beginner", "intermediate", "advanced"]
          },
          "key_concepts": {
            "type": "Type.ARRAY",
            "items": {
              "type": "Type.STRING"
            }
          },
          "tags": {
            "type": "Type.ARRAY",
            "items": {
              "type": "Type.STRING"
            }
          },
          "estimated_time_minutes": {
            "type": "Type.INTEGER"
          }
        }
      }
    },
    {
      "id": "trainer_analyse_prompt",
      "name": "Trainer Code Analysis",
      "description": "Analyze user's code attempt against flashcard solution in trainer mode",
      "category": "trainer",
      "prompt": "Analyze student's flashcard exercise attempt.\n\nREQUIREMENTS:\n- feedback_message: MAX 400 characters\n- Be educational and supportive but brief\n- Focus on learning progress, not just correctness\n\nCompare code to expected solution and provide: constructive feedback, mastery determination, correctness percentage, specific strengths, improvement areas, concrete next steps.",
      "tags": ["trainer", "flashcard-analysis", "mastery-assessment", "feedback"],
      "responseSchema": {
        "type": "Type.OBJECT",
        "properties": {
          "feedback_message": {
            "type": "Type.STRING"
          },
          "mastered": {
            "type": "Type.BOOLEAN"
          },
          "correctness_percentage": {
            "type": "Type.INTEGER"
          },
          "strengths": {
            "type": "Type.ARRAY",
            "items": {
              "type": "Type.STRING"
            }
          },
          "areas_for_improvement": {
            "type": "Type.ARRAY",
            "items": {
              "type": "Type.STRING"
            }
          },
          "next_steps": {
            "type": "Type.ARRAY",
            "items": {
              "type": "Type.STRING"
            }
          },
          "encouragement_level": {
            "type": "Type.STRING",
            "enum": ["high", "medium", "gentle_push", "strong_encouragement"]
          }
        }
      }
    },
    {
      "id": "test_prompt",
      "name": "Test Prompt",
      "description": "A simple test prompt for development and debugging purposes.",
      "category": "test",
      "prompt": "This is a test prompt. Respond with a brief test message and confirm success. Keep response under 200 characters total.",
      "tags": ["test", "debug", "development"],
      "responseSchema": {
        "type": "Type.OBJECT",
        "properties": {
          "test_message": {
            "type": "Type.STRING"
          },
          "test_successful": {
            "type": "Type.BOOLEAN"
          }
        }
      }
    }
  ],
  "metadata": {
    "version": "1.1",
    "created_at": "2025-07-04T16:30:00Z",
    "updated_at": "2025-07-04T18:00:00Z",
    "total_prompts": 5,
    "categories": [
      "helper",
      "trainer",
      "test"
    ],
    "description": "Prompts for DuggyBuggy Helper and Trainer modes with strict brevity requirements"
  }
}